name: Python application

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  install-poetry:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

  build:
    needs: [install-poetry]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          poetry install --no-root --no-interaction
      - name: Cache build venv
        id: cached-poetry
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/work/iac-labs/example-app/.venv
            ~/.local/share/virtualenvs
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

  check:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint
        run: poetry run task lint
      - name: Formatter
        run: poetry run task formatter
      - name: Security
        run: poetry run task security

  test:
    needs: [check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test
        run: poetry run task test
